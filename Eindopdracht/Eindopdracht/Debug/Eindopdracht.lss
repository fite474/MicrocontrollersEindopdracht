
Eindopdracht.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00000bb0  00000c44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bb0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000022  0080010c  0080010c  00000c50  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c50  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c80  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a0  00000000  00000000  00000cc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c61  00000000  00000000  00000e60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c8f  00000000  00000000  00002ac1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e0c  00000000  00000000  00003750  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000374  00000000  00000000  0000455c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000723  00000000  00000000  000048d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cea  00000000  00000000  00004ff3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  00005cdd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 eb       	ldi	r30, 0xB0	; 176
  a0:	fb e0       	ldi	r31, 0x0B	; 11
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 30       	cpi	r26, 0x0C	; 12
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac e0       	ldi	r26, 0x0C	; 12
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ae 32       	cpi	r26, 0x2E	; 46
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	4b d3       	rcall	.+1686   	; 0x75a <main>
  c4:	73 c5       	rjmp	.+2790   	; 0xbac <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <time>:
  c8:	fc 01       	movw	r30, r24
  ca:	0f b6       	in	r0, 0x3f	; 63
  cc:	f8 94       	cli
  ce:	60 91 2a 01 	lds	r22, 0x012A	; 0x80012a <__system_time>
  d2:	70 91 2b 01 	lds	r23, 0x012B	; 0x80012b <__system_time+0x1>
  d6:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <__system_time+0x2>
  da:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <__system_time+0x3>
  de:	0f be       	out	0x3f, r0	; 63
  e0:	30 97       	sbiw	r30, 0x00	; 0
  e2:	21 f0       	breq	.+8      	; 0xec <time+0x24>
  e4:	60 83       	st	Z, r22
  e6:	71 83       	std	Z+1, r23	; 0x01
  e8:	82 83       	std	Z+2, r24	; 0x02
  ea:	93 83       	std	Z+3, r25	; 0x03
  ec:	08 95       	ret

000000ee <drawImage>:
	x--;
	if(x == -1){
		x = 7;
	}
	addLocation(x,y);
	update();
  ee:	ea e1       	ldi	r30, 0x1A	; 26
  f0:	f1 e0       	ldi	r31, 0x01	; 1
  f2:	10 82       	st	Z, r1
  f4:	86 e6       	ldi	r24, 0x66	; 102
  f6:	81 83       	std	Z+1, r24	; 0x01
  f8:	82 83       	std	Z+2, r24	; 0x02
  fa:	13 82       	std	Z+3, r1	; 0x03
  fc:	9c e3       	ldi	r25, 0x3C	; 60
  fe:	94 83       	std	Z+4, r25	; 0x04
 100:	85 83       	std	Z+5, r24	; 0x05
 102:	83 ec       	ldi	r24, 0xC3	; 195
 104:	86 83       	std	Z+6, r24	; 0x06
 106:	17 82       	std	Z+7, r1	; 0x07
 108:	08 95       	ret

0000010a <displaySetPixel>:
 10a:	e8 2f       	mov	r30, r24
 10c:	f0 e0       	ldi	r31, 0x00	; 0
 10e:	e6 5e       	subi	r30, 0xE6	; 230
 110:	fe 4f       	sbci	r31, 0xFE	; 254
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	02 c0       	rjmp	.+4      	; 0x11c <displaySetPixel+0x12>
 118:	88 0f       	add	r24, r24
 11a:	99 1f       	adc	r25, r25
 11c:	6a 95       	dec	r22
 11e:	e2 f7       	brpl	.-8      	; 0x118 <displaySetPixel+0xe>
 120:	90 81       	ld	r25, Z
 122:	89 2b       	or	r24, r25
 124:	80 83       	st	Z, r24
 126:	08 95       	ret

00000128 <displayClrPixel>:
 128:	e8 2f       	mov	r30, r24
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	e6 5e       	subi	r30, 0xE6	; 230
 12e:	fe 4f       	sbci	r31, 0xFE	; 254
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	02 c0       	rjmp	.+4      	; 0x13a <displayClrPixel+0x12>
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	6a 95       	dec	r22
 13c:	e2 f7       	brpl	.-8      	; 0x136 <displayClrPixel+0xe>
 13e:	90 81       	ld	r25, Z
 140:	89 27       	eor	r24, r25
 142:	80 83       	st	Z, r24
 144:	08 95       	ret

00000146 <twi_init>:
 146:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 14a:	80 e2       	ldi	r24, 0x20	; 32
 14c:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 150:	08 95       	ret

00000152 <twi_start>:
 152:	84 ea       	ldi	r24, 0xA4	; 164
 154:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 158:	e4 e7       	ldi	r30, 0x74	; 116
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	88 23       	and	r24, r24
 160:	ec f7       	brge	.-6      	; 0x15c <twi_start+0xa>
 162:	08 95       	ret

00000164 <twi_tx>:
 164:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 168:	84 e8       	ldi	r24, 0x84	; 132
 16a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 16e:	e4 e7       	ldi	r30, 0x74	; 116
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	80 81       	ld	r24, Z
 174:	88 23       	and	r24, r24
 176:	ec f7       	brge	.-6      	; 0x172 <twi_tx+0xe>
 178:	08 95       	ret

0000017a <displayInitHT16K33>:
 17a:	0f 93       	push	r16
 17c:	1f 93       	push	r17
 17e:	cf 93       	push	r28
 180:	df 93       	push	r29
 182:	c8 2f       	mov	r28, r24
 184:	e6 df       	rcall	.-52     	; 0x152 <twi_start>
 186:	8c 2f       	mov	r24, r28
 188:	ed df       	rcall	.-38     	; 0x164 <twi_tx>
 18a:	81 e2       	ldi	r24, 0x21	; 33
 18c:	eb df       	rcall	.-42     	; 0x164 <twi_tx>
 18e:	04 e7       	ldi	r16, 0x74	; 116
 190:	10 e0       	ldi	r17, 0x00	; 0
 192:	d4 e9       	ldi	r29, 0x94	; 148
 194:	f8 01       	movw	r30, r16
 196:	d0 83       	st	Z, r29
 198:	dc df       	rcall	.-72     	; 0x152 <twi_start>
 19a:	8c 2f       	mov	r24, r28
 19c:	e3 df       	rcall	.-58     	; 0x164 <twi_tx>
 19e:	80 ea       	ldi	r24, 0xA0	; 160
 1a0:	e1 df       	rcall	.-62     	; 0x164 <twi_tx>
 1a2:	f8 01       	movw	r30, r16
 1a4:	d0 83       	st	Z, r29
 1a6:	d5 df       	rcall	.-86     	; 0x152 <twi_start>
 1a8:	8c 2f       	mov	r24, r28
 1aa:	dc df       	rcall	.-72     	; 0x164 <twi_tx>
 1ac:	81 ee       	ldi	r24, 0xE1	; 225
 1ae:	da df       	rcall	.-76     	; 0x164 <twi_tx>
 1b0:	f8 01       	movw	r30, r16
 1b2:	d0 83       	st	Z, r29
 1b4:	ce df       	rcall	.-100    	; 0x152 <twi_start>
 1b6:	8c 2f       	mov	r24, r28
 1b8:	d5 df       	rcall	.-86     	; 0x164 <twi_tx>
 1ba:	81 e8       	ldi	r24, 0x81	; 129
 1bc:	d3 df       	rcall	.-90     	; 0x164 <twi_tx>
 1be:	f8 01       	movw	r30, r16
 1c0:	d0 83       	st	Z, r29
 1c2:	c7 df       	rcall	.-114    	; 0x152 <twi_start>
 1c4:	8c 2f       	mov	r24, r28
 1c6:	ce df       	rcall	.-100    	; 0x164 <twi_tx>
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	cc df       	rcall	.-104    	; 0x164 <twi_tx>
 1cc:	d8 e0       	ldi	r29, 0x08	; 8
 1ce:	c5 e5       	ldi	r28, 0x55	; 85
 1d0:	c0 95       	com	r28
 1d2:	8c 2f       	mov	r24, r28
 1d4:	80 fb       	bst	r24, 0
 1d6:	87 95       	ror	r24
 1d8:	87 f9       	bld	r24, 7
 1da:	c4 df       	rcall	.-120    	; 0x164 <twi_tx>
 1dc:	80 e0       	ldi	r24, 0x00	; 0
 1de:	c2 df       	rcall	.-124    	; 0x164 <twi_tx>
 1e0:	d1 50       	subi	r29, 0x01	; 1
 1e2:	b1 f7       	brne	.-20     	; 0x1d0 <displayInitHT16K33+0x56>
 1e4:	84 e9       	ldi	r24, 0x94	; 148
 1e6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 1ea:	df 91       	pop	r29
 1ec:	cf 91       	pop	r28
 1ee:	1f 91       	pop	r17
 1f0:	0f 91       	pop	r16
 1f2:	08 95       	ret

000001f4 <displayInit>:
 1f4:	a8 df       	rcall	.-176    	; 0x146 <twi_init>
 1f6:	84 ee       	ldi	r24, 0xE4	; 228
 1f8:	c0 df       	rcall	.-128    	; 0x17a <displayInitHT16K33>
 1fa:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <locList+0x1>
 1fe:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <locList>
 202:	80 e1       	ldi	r24, 0x10	; 16
 204:	91 e0       	ldi	r25, 0x01	; 1
 206:	60 df       	rcall	.-320    	; 0xc8 <time>
 208:	cb 01       	movw	r24, r22
 20a:	68 d4       	rcall	.+2256   	; 0xadc <srand>
 20c:	64 d4       	rcall	.+2248   	; 0xad6 <rand>
 20e:	63 d4       	rcall	.+2246   	; 0xad6 <rand>
 210:	62 c4       	rjmp	.+2244   	; 0xad6 <rand>
 212:	08 95       	ret

00000214 <update>:
 214:	0f 93       	push	r16
 216:	1f 93       	push	r17
 218:	cf 93       	push	r28
 21a:	df 93       	push	r29
 21c:	9a df       	rcall	.-204    	; 0x152 <twi_start>
 21e:	84 ee       	ldi	r24, 0xE4	; 228
 220:	a1 df       	rcall	.-190    	; 0x164 <twi_tx>
 222:	80 e0       	ldi	r24, 0x00	; 0
 224:	9f df       	rcall	.-194    	; 0x164 <twi_tx>
 226:	c2 e2       	ldi	r28, 0x22	; 34
 228:	d1 e0       	ldi	r29, 0x01	; 1
 22a:	0a e1       	ldi	r16, 0x1A	; 26
 22c:	11 e0       	ldi	r17, 0x01	; 1
 22e:	8a 91       	ld	r24, -Y
 230:	80 fb       	bst	r24, 0
 232:	87 95       	ror	r24
 234:	87 f9       	bld	r24, 7
 236:	96 df       	rcall	.-212    	; 0x164 <twi_tx>
 238:	80 e0       	ldi	r24, 0x00	; 0
 23a:	94 df       	rcall	.-216    	; 0x164 <twi_tx>
 23c:	c0 17       	cp	r28, r16
 23e:	d1 07       	cpc	r29, r17
 240:	b1 f7       	brne	.-20     	; 0x22e <update+0x1a>
 242:	84 e9       	ldi	r24, 0x94	; 148
 244:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 248:	df 91       	pop	r29
 24a:	cf 91       	pop	r28
 24c:	1f 91       	pop	r17
 24e:	0f 91       	pop	r16
 250:	08 95       	ret

00000252 <setStartLocation>:
 252:	cf 93       	push	r28
 254:	df 93       	push	r29
 256:	c8 2f       	mov	r28, r24
 258:	d6 2f       	mov	r29, r22
 25a:	e2 e2       	ldi	r30, 0x22	; 34
 25c:	f1 e0       	ldi	r31, 0x01	; 1
 25e:	80 83       	st	Z, r24
 260:	91 83       	std	Z+1, r25	; 0x01
 262:	62 83       	std	Z+2, r22	; 0x02
 264:	73 83       	std	Z+3, r23	; 0x03
 266:	88 e0       	ldi	r24, 0x08	; 8
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	cd d2       	rcall	.+1434   	; 0x806 <malloc>
 26c:	fc 01       	movw	r30, r24
 26e:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <locList+0x1>
 272:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <locList>
 276:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <currenLocation>
 27a:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <currenLocation+0x1>
 27e:	a0 91 24 01 	lds	r26, 0x0124	; 0x800124 <currenLocation+0x2>
 282:	b0 91 25 01 	lds	r27, 0x0125	; 0x800125 <currenLocation+0x3>
 286:	80 83       	st	Z, r24
 288:	91 83       	std	Z+1, r25	; 0x01
 28a:	a2 83       	std	Z+2, r26	; 0x02
 28c:	b3 83       	std	Z+3, r27	; 0x03
 28e:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__data_end>
 292:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__data_end+0x1>
 296:	35 83       	std	Z+5, r19	; 0x05
 298:	24 83       	std	Z+4, r18	; 0x04
 29a:	17 82       	std	Z+7, r1	; 0x07
 29c:	16 82       	std	Z+6, r1	; 0x06
 29e:	2f 5f       	subi	r18, 0xFF	; 255
 2a0:	3f 4f       	sbci	r19, 0xFF	; 255
 2a2:	30 93 0d 01 	sts	0x010D, r19	; 0x80010d <__data_end+0x1>
 2a6:	20 93 0c 01 	sts	0x010C, r18	; 0x80010c <__data_end>
 2aa:	6d 2f       	mov	r22, r29
 2ac:	8c 2f       	mov	r24, r28
 2ae:	2d df       	rcall	.-422    	; 0x10a <displaySetPixel>
 2b0:	b1 df       	rcall	.-158    	; 0x214 <update>
 2b2:	df 91       	pop	r29
 2b4:	cf 91       	pop	r28
 2b6:	08 95       	ret

000002b8 <getSize>:
 2b8:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <locList>
 2bc:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <locList+0x1>
 2c0:	30 97       	sbiw	r30, 0x00	; 0
 2c2:	49 f0       	breq	.+18     	; 0x2d6 <getSize+0x1e>
 2c4:	80 e0       	ldi	r24, 0x00	; 0
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	01 96       	adiw	r24, 0x01	; 1
 2ca:	06 80       	ldd	r0, Z+6	; 0x06
 2cc:	f7 81       	ldd	r31, Z+7	; 0x07
 2ce:	e0 2d       	mov	r30, r0
 2d0:	30 97       	sbiw	r30, 0x00	; 0
 2d2:	d1 f7       	brne	.-12     	; 0x2c8 <getSize+0x10>
 2d4:	08 95       	ret
 2d6:	80 e0       	ldi	r24, 0x00	; 0
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	08 95       	ret

000002dc <increaceSize>:
 2dc:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <maxSize>
 2e0:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <maxSize+0x1>
 2e4:	01 96       	adiw	r24, 0x01	; 1
 2e6:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <maxSize+0x1>
 2ea:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <maxSize>
 2ee:	08 95       	ret

000002f0 <addCandy>:
 2f0:	cf 93       	push	r28
 2f2:	df 93       	push	r29
 2f4:	f0 d3       	rcall	.+2016   	; 0xad6 <rand>
 2f6:	ef d3       	rcall	.+2014   	; 0xad6 <rand>
 2f8:	ee d3       	rcall	.+2012   	; 0xad6 <rand>
 2fa:	ed d3       	rcall	.+2010   	; 0xad6 <rand>
 2fc:	ec d3       	rcall	.+2008   	; 0xad6 <rand>
 2fe:	eb d3       	rcall	.+2006   	; 0xad6 <rand>
 300:	ea d3       	rcall	.+2004   	; 0xad6 <rand>
 302:	87 70       	andi	r24, 0x07	; 7
 304:	90 78       	andi	r25, 0x80	; 128
 306:	99 23       	and	r25, r25
 308:	24 f4       	brge	.+8      	; 0x312 <addCandy+0x22>
 30a:	01 97       	sbiw	r24, 0x01	; 1
 30c:	88 6f       	ori	r24, 0xF8	; 248
 30e:	9f 6f       	ori	r25, 0xFF	; 255
 310:	01 96       	adiw	r24, 0x01	; 1
 312:	ec 01       	movw	r28, r24
 314:	e0 d3       	rcall	.+1984   	; 0xad6 <rand>
 316:	87 70       	andi	r24, 0x07	; 7
 318:	90 78       	andi	r25, 0x80	; 128
 31a:	99 23       	and	r25, r25
 31c:	24 f4       	brge	.+8      	; 0x326 <addCandy+0x36>
 31e:	01 97       	sbiw	r24, 0x01	; 1
 320:	88 6f       	ori	r24, 0xF8	; 248
 322:	9f 6f       	ori	r25, 0xFF	; 255
 324:	01 96       	adiw	r24, 0x01	; 1
 326:	bc 01       	movw	r22, r24
 328:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <locList>
 32c:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <locList+0x1>
 330:	30 97       	sbiw	r30, 0x00	; 0
 332:	59 f1       	breq	.+86     	; 0x38a <addCandy+0x9a>
 334:	20 81       	ld	r18, Z
 336:	31 81       	ldd	r19, Z+1	; 0x01
 338:	2c 17       	cp	r18, r28
 33a:	3d 07       	cpc	r19, r29
 33c:	09 f5       	brne	.+66     	; 0x380 <addCandy+0x90>
 33e:	82 81       	ldd	r24, Z+2	; 0x02
 340:	93 81       	ldd	r25, Z+3	; 0x03
 342:	86 17       	cp	r24, r22
 344:	97 07       	cpc	r25, r23
 346:	d9 f4       	brne	.+54     	; 0x37e <addCandy+0x8e>
 348:	c6 d3       	rcall	.+1932   	; 0xad6 <rand>
 34a:	c5 d3       	rcall	.+1930   	; 0xad6 <rand>
 34c:	c4 d3       	rcall	.+1928   	; 0xad6 <rand>
 34e:	87 70       	andi	r24, 0x07	; 7
 350:	90 78       	andi	r25, 0x80	; 128
 352:	99 23       	and	r25, r25
 354:	24 f4       	brge	.+8      	; 0x35e <addCandy+0x6e>
 356:	01 97       	sbiw	r24, 0x01	; 1
 358:	88 6f       	ori	r24, 0xF8	; 248
 35a:	9f 6f       	ori	r25, 0xFF	; 255
 35c:	01 96       	adiw	r24, 0x01	; 1
 35e:	ec 01       	movw	r28, r24
 360:	ba d3       	rcall	.+1908   	; 0xad6 <rand>
 362:	87 70       	andi	r24, 0x07	; 7
 364:	90 78       	andi	r25, 0x80	; 128
 366:	99 23       	and	r25, r25
 368:	24 f4       	brge	.+8      	; 0x372 <addCandy+0x82>
 36a:	01 97       	sbiw	r24, 0x01	; 1
 36c:	88 6f       	ori	r24, 0xF8	; 248
 36e:	9f 6f       	ori	r25, 0xFF	; 255
 370:	01 96       	adiw	r24, 0x01	; 1
 372:	bc 01       	movw	r22, r24
 374:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <locList>
 378:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <locList+0x1>
 37c:	01 c0       	rjmp	.+2      	; 0x380 <addCandy+0x90>
 37e:	e9 01       	movw	r28, r18
 380:	06 80       	ldd	r0, Z+6	; 0x06
 382:	f7 81       	ldd	r31, Z+7	; 0x07
 384:	e0 2d       	mov	r30, r0
 386:	30 97       	sbiw	r30, 0x00	; 0
 388:	a9 f6       	brne	.-86     	; 0x334 <addCandy+0x44>
 38a:	e4 e1       	ldi	r30, 0x14	; 20
 38c:	f1 e0       	ldi	r31, 0x01	; 1
 38e:	d1 83       	std	Z+1, r29	; 0x01
 390:	c0 83       	st	Z, r28
 392:	73 83       	std	Z+3, r23	; 0x03
 394:	62 83       	std	Z+2, r22	; 0x02
 396:	8c 2f       	mov	r24, r28
 398:	b8 de       	rcall	.-656    	; 0x10a <displaySetPixel>
 39a:	3c df       	rcall	.-392    	; 0x214 <update>
 39c:	df 91       	pop	r29
 39e:	cf 91       	pop	r28
 3a0:	08 95       	ret

000003a2 <checkColission>:
 3a2:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <locList>
 3a6:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <locList+0x1>
 3aa:	30 97       	sbiw	r30, 0x00	; 0
 3ac:	91 f0       	breq	.+36     	; 0x3d2 <checkColission+0x30>
 3ae:	20 81       	ld	r18, Z
 3b0:	31 81       	ldd	r19, Z+1	; 0x01
 3b2:	28 17       	cp	r18, r24
 3b4:	39 07       	cpc	r19, r25
 3b6:	29 f4       	brne	.+10     	; 0x3c2 <checkColission+0x20>
 3b8:	22 81       	ldd	r18, Z+2	; 0x02
 3ba:	33 81       	ldd	r19, Z+3	; 0x03
 3bc:	26 17       	cp	r18, r22
 3be:	37 07       	cpc	r19, r23
 3c0:	59 f0       	breq	.+22     	; 0x3d8 <checkColission+0x36>
 3c2:	06 80       	ldd	r0, Z+6	; 0x06
 3c4:	f7 81       	ldd	r31, Z+7	; 0x07
 3c6:	e0 2d       	mov	r30, r0
 3c8:	30 97       	sbiw	r30, 0x00	; 0
 3ca:	89 f7       	brne	.-30     	; 0x3ae <checkColission+0xc>
 3cc:	80 e0       	ldi	r24, 0x00	; 0
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	08 95       	ret
 3d2:	80 e0       	ldi	r24, 0x00	; 0
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	08 95       	ret
 3d8:	81 e0       	ldi	r24, 0x01	; 1
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	08 95       	ret

000003de <addLocation>:
 3de:	8f 92       	push	r8
 3e0:	9f 92       	push	r9
 3e2:	af 92       	push	r10
 3e4:	bf 92       	push	r11
 3e6:	cf 92       	push	r12
 3e8:	df 92       	push	r13
 3ea:	ef 92       	push	r14
 3ec:	ff 92       	push	r15
 3ee:	0f 93       	push	r16
 3f0:	1f 93       	push	r17
 3f2:	cf 93       	push	r28
 3f4:	df 93       	push	r29
 3f6:	8c 01       	movw	r16, r24
 3f8:	7b 01       	movw	r14, r22
 3fa:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <candy>
 3fe:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <candy+0x1>
 402:	80 17       	cp	r24, r16
 404:	91 07       	cpc	r25, r17
 406:	49 f4       	brne	.+18     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 408:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <candy+0x2>
 40c:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <candy+0x3>
 410:	86 17       	cp	r24, r22
 412:	97 07       	cpc	r25, r23
 414:	11 f4       	brne	.+4      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 416:	62 df       	rcall	.-316    	; 0x2dc <increaceSize>
 418:	6b df       	rcall	.-298    	; 0x2f0 <addCandy>
 41a:	b7 01       	movw	r22, r14
 41c:	c8 01       	movw	r24, r16
 41e:	c1 df       	rcall	.-126    	; 0x3a2 <checkColission>
 420:	89 2b       	or	r24, r25
 422:	09 f0       	breq	.+2      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 424:	a4 c0       	rjmp	.+328    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 426:	8e d1       	rcall	.+796    	; 0x744 <calculateNewScoreMovement>
 428:	47 df       	rcall	.-370    	; 0x2b8 <getSize>
 42a:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <maxSize>
 42e:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <maxSize+0x1>
 432:	82 17       	cp	r24, r18
 434:	93 07       	cpc	r25, r19
 436:	5c f5       	brge	.+86     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 438:	6e 2d       	mov	r22, r14
 43a:	80 2f       	mov	r24, r16
 43c:	66 de       	rcall	.-820    	; 0x10a <displaySetPixel>
 43e:	c0 91 18 01 	lds	r28, 0x0118	; 0x800118 <locList>
 442:	d0 91 19 01 	lds	r29, 0x0119	; 0x800119 <locList+0x1>
 446:	01 c0       	rjmp	.+2      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 448:	ec 01       	movw	r28, r24
 44a:	8e 81       	ldd	r24, Y+6	; 0x06
 44c:	9f 81       	ldd	r25, Y+7	; 0x07
 44e:	00 97       	sbiw	r24, 0x00	; 0
 450:	d9 f7       	brne	.-10     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 452:	88 e0       	ldi	r24, 0x08	; 8
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	d7 d1       	rcall	.+942    	; 0x806 <malloc>
 458:	fc 01       	movw	r30, r24
 45a:	11 83       	std	Z+1, r17	; 0x01
 45c:	00 83       	st	Z, r16
 45e:	f3 82       	std	Z+3, r15	; 0x03
 460:	e2 82       	std	Z+2, r14	; 0x02
 462:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
 466:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__data_end+0x1>
 46a:	95 83       	std	Z+5, r25	; 0x05
 46c:	84 83       	std	Z+4, r24	; 0x04
 46e:	17 82       	std	Z+7, r1	; 0x07
 470:	16 82       	std	Z+6, r1	; 0x06
 472:	ff 83       	std	Y+7, r31	; 0x07
 474:	ee 83       	std	Y+6, r30	; 0x06
 476:	01 96       	adiw	r24, 0x01	; 1
 478:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__data_end+0x1>
 47c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
 480:	e2 e2       	ldi	r30, 0x22	; 34
 482:	f1 e0       	ldi	r31, 0x01	; 1
 484:	11 83       	std	Z+1, r17	; 0x01
 486:	00 83       	st	Z, r16
 488:	f3 82       	std	Z+3, r15	; 0x03
 48a:	e2 82       	std	Z+2, r14	; 0x02
 48c:	80 c0       	rjmp	.+256    	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 48e:	6e 2d       	mov	r22, r14
 490:	80 2f       	mov	r24, r16
 492:	3b de       	rcall	.-906    	; 0x10a <displaySetPixel>
 494:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <locList>
 498:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <locList+0x1>
 49c:	44 81       	ldd	r20, Z+4	; 0x04
 49e:	55 81       	ldd	r21, Z+5	; 0x05
 4a0:	30 97       	sbiw	r30, 0x00	; 0
 4a2:	49 f4       	brne	.+18     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4a4:	66 c0       	rjmp	.+204    	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 4a6:	24 81       	ldd	r18, Z+4	; 0x04
 4a8:	35 81       	ldd	r19, Z+5	; 0x05
 4aa:	24 17       	cp	r18, r20
 4ac:	35 07       	cpc	r19, r21
 4ae:	3c f4       	brge	.+14     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4b0:	6c 01       	movw	r12, r24
 4b2:	a9 01       	movw	r20, r18
 4b4:	04 c0       	rjmp	.+8      	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4b6:	80 e0       	ldi	r24, 0x00	; 0
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	c1 2c       	mov	r12, r1
 4bc:	d1 2c       	mov	r13, r1
 4be:	01 96       	adiw	r24, 0x01	; 1
 4c0:	06 80       	ldd	r0, Z+6	; 0x06
 4c2:	f7 81       	ldd	r31, Z+7	; 0x07
 4c4:	e0 2d       	mov	r30, r0
 4c6:	30 97       	sbiw	r30, 0x00	; 0
 4c8:	71 f7       	brne	.-36     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 4ca:	c6 01       	movw	r24, r12
 4cc:	d8 d0       	rcall	.+432    	; 0x67e <writeLedDisplay>
 4ce:	80 90 18 01 	lds	r8, 0x0118	; 0x800118 <locList>
 4d2:	90 90 19 01 	lds	r9, 0x0119	; 0x800119 <locList+0x1>
 4d6:	88 e0       	ldi	r24, 0x08	; 8
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	95 d1       	rcall	.+810    	; 0x806 <malloc>
 4dc:	5c 01       	movw	r10, r24
 4de:	81 14       	cp	r8, r1
 4e0:	91 04       	cpc	r9, r1
 4e2:	09 f4       	brne	.+2      	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4e4:	54 c0       	rjmp	.+168    	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 4e6:	c1 14       	cp	r12, r1
 4e8:	d1 04       	cpc	r13, r1
 4ea:	39 f0       	breq	.+14     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4ec:	80 e0       	ldi	r24, 0x00	; 0
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	37 c0       	rjmp	.+110    	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 4f2:	c8 16       	cp	r12, r24
 4f4:	d9 06       	cpc	r13, r25
 4f6:	99 f5       	brne	.+102    	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 4f8:	08 c0       	rjmp	.+16     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 4fa:	e4 01       	movw	r28, r8
 4fc:	81 2c       	mov	r8, r1
 4fe:	91 2c       	mov	r9, r1
 500:	04 c0       	rjmp	.+8      	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 502:	c1 2c       	mov	r12, r1
 504:	d1 2c       	mov	r13, r1
 506:	81 2c       	mov	r8, r1
 508:	91 2c       	mov	r9, r1
 50a:	6a 81       	ldd	r22, Y+2	; 0x02
 50c:	88 81       	ld	r24, Y
 50e:	0c de       	rcall	.-1000   	; 0x128 <displayClrPixel>
 510:	f5 01       	movw	r30, r10
 512:	11 83       	std	Z+1, r17	; 0x01
 514:	00 83       	st	Z, r16
 516:	f3 82       	std	Z+3, r15	; 0x03
 518:	e2 82       	std	Z+2, r14	; 0x02
 51a:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
 51e:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__data_end+0x1>
 522:	95 83       	std	Z+5, r25	; 0x05
 524:	84 83       	std	Z+4, r24	; 0x04
 526:	2e 81       	ldd	r18, Y+6	; 0x06
 528:	3f 81       	ldd	r19, Y+7	; 0x07
 52a:	37 83       	std	Z+7, r19	; 0x07
 52c:	26 83       	std	Z+6, r18	; 0x06
 52e:	01 96       	adiw	r24, 0x01	; 1
 530:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__data_end+0x1>
 534:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
 538:	ce 01       	movw	r24, r28
 53a:	fd d1       	rcall	.+1018   	; 0x936 <free>
 53c:	cd 28       	or	r12, r13
 53e:	29 f4       	brne	.+10     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 540:	b0 92 19 01 	sts	0x0119, r11	; 0x800119 <locList+0x1>
 544:	a0 92 18 01 	sts	0x0118, r10	; 0x800118 <locList>
 548:	03 c0       	rjmp	.+6      	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 54a:	f4 01       	movw	r30, r8
 54c:	b7 82       	std	Z+7, r11	; 0x07
 54e:	a6 82       	std	Z+6, r10	; 0x06
 550:	e2 e2       	ldi	r30, 0x22	; 34
 552:	f1 e0       	ldi	r31, 0x01	; 1
 554:	11 83       	std	Z+1, r17	; 0x01
 556:	00 83       	st	Z, r16
 558:	f3 82       	std	Z+3, r15	; 0x03
 55a:	e2 82       	std	Z+2, r14	; 0x02
 55c:	18 c0       	rjmp	.+48     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 55e:	4e 01       	movw	r8, r28
 560:	f4 01       	movw	r30, r8
 562:	c6 81       	ldd	r28, Z+6	; 0x06
 564:	d7 81       	ldd	r29, Z+7	; 0x07
 566:	01 96       	adiw	r24, 0x01	; 1
 568:	20 97       	sbiw	r28, 0x00	; 0
 56a:	19 f6       	brne	.-122    	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 56c:	10 c0       	rjmp	.+32     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 56e:	bf dd       	rcall	.-1154   	; 0xee <drawImage>
 570:	0e c0       	rjmp	.+28     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 572:	80 e0       	ldi	r24, 0x00	; 0
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	83 d0       	rcall	.+262    	; 0x67e <writeLedDisplay>
 578:	c0 91 18 01 	lds	r28, 0x0118	; 0x800118 <locList>
 57c:	d0 91 19 01 	lds	r29, 0x0119	; 0x800119 <locList+0x1>
 580:	88 e0       	ldi	r24, 0x08	; 8
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	40 d1       	rcall	.+640    	; 0x806 <malloc>
 586:	5c 01       	movw	r10, r24
 588:	20 97       	sbiw	r28, 0x00	; 0
 58a:	09 f0       	breq	.+2      	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 58c:	ba cf       	rjmp	.-140    	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 58e:	df 91       	pop	r29
 590:	cf 91       	pop	r28
 592:	1f 91       	pop	r17
 594:	0f 91       	pop	r16
 596:	ff 90       	pop	r15
 598:	ef 90       	pop	r14
 59a:	df 90       	pop	r13
 59c:	cf 90       	pop	r12
 59e:	bf 90       	pop	r11
 5a0:	af 90       	pop	r10
 5a2:	9f 90       	pop	r9
 5a4:	8f 90       	pop	r8
 5a6:	08 95       	ret

000005a8 <moveDown>:
	
}
void moveDown(){
	int x = currenLocation.x;
 5a8:	e2 e2       	ldi	r30, 0x22	; 34
 5aa:	f1 e0       	ldi	r31, 0x01	; 1
 5ac:	80 81       	ld	r24, Z
 5ae:	91 81       	ldd	r25, Z+1	; 0x01
	int y = currenLocation.y;
 5b0:	62 81       	ldd	r22, Z+2	; 0x02
 5b2:	73 81       	ldd	r23, Z+3	; 0x03
	
	x++;
 5b4:	01 96       	adiw	r24, 0x01	; 1
	if(x == 8){
 5b6:	88 30       	cpi	r24, 0x08	; 8
 5b8:	91 05       	cpc	r25, r1
 5ba:	11 f4       	brne	.+4      	; 0x5c0 <moveDown+0x18>
		x = 0;
 5bc:	80 e0       	ldi	r24, 0x00	; 0
 5be:	90 e0       	ldi	r25, 0x00	; 0
	}
	addLocation(x,y);
 5c0:	0e df       	rcall	.-484    	; 0x3de <addLocation>
	update();
 5c2:	28 ce       	rjmp	.-944    	; 0x214 <update>
 5c4:	08 95       	ret

000005c6 <spi_masterInit>:
 5c6:	8f ef       	ldi	r24, 0xFF	; 255
}

void calculateNewScoreAppleCollected()
{
	score += 20;
	writeLedDisplay(score);
 5c8:	87 bb       	out	0x17, r24	; 23
 5ca:	bb 98       	cbi	0x17, 3	; 23
 5cc:	c0 9a       	sbi	0x18, 0	; 24
 5ce:	82 e5       	ldi	r24, 0x52	; 82
 5d0:	8d b9       	out	0x0d, r24	; 13
 5d2:	08 95       	ret

000005d4 <spi_write>:
 5d4:	8f b9       	out	0x0f, r24	; 15
 5d6:	77 9b       	sbis	0x0e, 7	; 14
 5d8:	fe cf       	rjmp	.-4      	; 0x5d6 <spi_write+0x2>
 5da:	08 95       	ret

000005dc <spi_slaveSelect>:
 5dc:	98 b3       	in	r25, 0x18	; 24
 5de:	21 e0       	ldi	r18, 0x01	; 1
 5e0:	30 e0       	ldi	r19, 0x00	; 0
 5e2:	02 c0       	rjmp	.+4      	; 0x5e8 <spi_slaveSelect+0xc>
 5e4:	22 0f       	add	r18, r18
 5e6:	33 1f       	adc	r19, r19
 5e8:	8a 95       	dec	r24
 5ea:	e2 f7       	brpl	.-8      	; 0x5e4 <spi_slaveSelect+0x8>
 5ec:	20 95       	com	r18
 5ee:	29 23       	and	r18, r25
 5f0:	28 bb       	out	0x18, r18	; 24
 5f2:	08 95       	ret

000005f4 <spi_slaveDeSelect>:
 5f4:	98 b3       	in	r25, 0x18	; 24
 5f6:	21 e0       	ldi	r18, 0x01	; 1
 5f8:	30 e0       	ldi	r19, 0x00	; 0
 5fa:	02 c0       	rjmp	.+4      	; 0x600 <spi_slaveDeSelect+0xc>
 5fc:	22 0f       	add	r18, r18
 5fe:	33 1f       	adc	r19, r19
 600:	8a 95       	dec	r24
 602:	e2 f7       	brpl	.-8      	; 0x5fc <spi_slaveDeSelect+0x8>
 604:	29 2b       	or	r18, r25
 606:	28 bb       	out	0x18, r18	; 24
 608:	08 95       	ret

0000060a <displayDriverInit>:
 60a:	80 e0       	ldi	r24, 0x00	; 0
 60c:	e7 df       	rcall	.-50     	; 0x5dc <spi_slaveSelect>
 60e:	89 e0       	ldi	r24, 0x09	; 9
 610:	e1 df       	rcall	.-62     	; 0x5d4 <spi_write>
 612:	8f ef       	ldi	r24, 0xFF	; 255
 614:	df df       	rcall	.-66     	; 0x5d4 <spi_write>
 616:	80 e0       	ldi	r24, 0x00	; 0
 618:	ed df       	rcall	.-38     	; 0x5f4 <spi_slaveDeSelect>
 61a:	80 e0       	ldi	r24, 0x00	; 0
 61c:	df df       	rcall	.-66     	; 0x5dc <spi_slaveSelect>
 61e:	8a e0       	ldi	r24, 0x0A	; 10
 620:	d9 df       	rcall	.-78     	; 0x5d4 <spi_write>
 622:	8f e0       	ldi	r24, 0x0F	; 15
 624:	d7 df       	rcall	.-82     	; 0x5d4 <spi_write>
 626:	80 e0       	ldi	r24, 0x00	; 0
 628:	e5 df       	rcall	.-54     	; 0x5f4 <spi_slaveDeSelect>
 62a:	80 e0       	ldi	r24, 0x00	; 0
 62c:	d7 df       	rcall	.-82     	; 0x5dc <spi_slaveSelect>
 62e:	8b e0       	ldi	r24, 0x0B	; 11
 630:	d1 df       	rcall	.-94     	; 0x5d4 <spi_write>
 632:	83 e0       	ldi	r24, 0x03	; 3
 634:	cf df       	rcall	.-98     	; 0x5d4 <spi_write>
 636:	80 e0       	ldi	r24, 0x00	; 0
 638:	dd df       	rcall	.-70     	; 0x5f4 <spi_slaveDeSelect>
 63a:	80 e0       	ldi	r24, 0x00	; 0
 63c:	cf df       	rcall	.-98     	; 0x5dc <spi_slaveSelect>
 63e:	8c e0       	ldi	r24, 0x0C	; 12
 640:	c9 df       	rcall	.-110    	; 0x5d4 <spi_write>
 642:	81 e0       	ldi	r24, 0x01	; 1
 644:	c7 df       	rcall	.-114    	; 0x5d4 <spi_write>
 646:	80 e0       	ldi	r24, 0x00	; 0
 648:	d5 cf       	rjmp	.-86     	; 0x5f4 <spi_slaveDeSelect>
 64a:	08 95       	ret

0000064c <spi_writeWord>:
 64c:	cf 93       	push	r28
 64e:	df 93       	push	r29
 650:	d8 2f       	mov	r29, r24
 652:	c6 2f       	mov	r28, r22
 654:	80 e0       	ldi	r24, 0x00	; 0
 656:	c2 df       	rcall	.-124    	; 0x5dc <spi_slaveSelect>
 658:	8d 2f       	mov	r24, r29
 65a:	bc df       	rcall	.-136    	; 0x5d4 <spi_write>
 65c:	8c 2f       	mov	r24, r28
 65e:	ba df       	rcall	.-140    	; 0x5d4 <spi_write>
 660:	80 e0       	ldi	r24, 0x00	; 0
 662:	c8 df       	rcall	.-112    	; 0x5f4 <spi_slaveDeSelect>
 664:	df 91       	pop	r29
 666:	cf 91       	pop	r28
 668:	08 95       	ret

0000066a <clearDisplay>:
 66a:	cf 93       	push	r28
 66c:	c1 e0       	ldi	r28, 0x01	; 1
 66e:	60 e0       	ldi	r22, 0x00	; 0
 670:	8c 2f       	mov	r24, r28
 672:	ec df       	rcall	.-40     	; 0x64c <spi_writeWord>
 674:	cf 5f       	subi	r28, 0xFF	; 255
 676:	c5 30       	cpi	r28, 0x05	; 5
 678:	d1 f7       	brne	.-12     	; 0x66e <clearDisplay+0x4>
 67a:	cf 91       	pop	r28
 67c:	08 95       	ret

0000067e <writeLedDisplay>:
 67e:	0f 93       	push	r16
 680:	1f 93       	push	r17
 682:	cf 93       	push	r28
 684:	df 93       	push	r29
 686:	08 2f       	mov	r16, r24
 688:	19 2f       	mov	r17, r25
 68a:	ef df       	rcall	.-34     	; 0x66a <clearDisplay>
 68c:	c0 2f       	mov	r28, r16
 68e:	d1 2f       	mov	r29, r17
 690:	c0 31       	cpi	r28, 0x10	; 16
 692:	87 e2       	ldi	r24, 0x27	; 39
 694:	d8 07       	cpc	r29, r24
 696:	14 f0       	brlt	.+4      	; 0x69c <writeLedDisplay+0x1e>
 698:	cf e0       	ldi	r28, 0x0F	; 15
 69a:	d7 e2       	ldi	r29, 0x27	; 39
 69c:	dd 23       	and	r29, r29
 69e:	54 f5       	brge	.+84     	; 0x6f4 <writeLedDisplay+0x76>
 6a0:	c9 31       	cpi	r28, 0x19	; 25
 6a2:	8c ef       	ldi	r24, 0xFC	; 252
 6a4:	d8 07       	cpc	r29, r24
 6a6:	14 f4       	brge	.+4      	; 0x6ac <writeLedDisplay+0x2e>
 6a8:	c9 e1       	ldi	r28, 0x19	; 25
 6aa:	dc ef       	ldi	r29, 0xFC	; 252
 6ac:	8e 01       	movw	r16, r28
 6ae:	dd 23       	and	r29, r29
 6b0:	24 f4       	brge	.+8      	; 0x6ba <writeLedDisplay+0x3c>
 6b2:	00 27       	eor	r16, r16
 6b4:	11 27       	eor	r17, r17
 6b6:	0c 1b       	sub	r16, r28
 6b8:	1d 0b       	sbc	r17, r29
 6ba:	6a e0       	ldi	r22, 0x0A	; 10
 6bc:	84 e0       	ldi	r24, 0x04	; 4
 6be:	c6 df       	rcall	.-116    	; 0x64c <spi_writeWord>
 6c0:	c8 01       	movw	r24, r16
 6c2:	64 e6       	ldi	r22, 0x64	; 100
 6c4:	70 e0       	ldi	r23, 0x00	; 0
 6c6:	78 d0       	rcall	.+240    	; 0x7b8 <__divmodhi4>
 6c8:	cb 01       	movw	r24, r22
 6ca:	ca e0       	ldi	r28, 0x0A	; 10
 6cc:	d0 e0       	ldi	r29, 0x00	; 0
 6ce:	be 01       	movw	r22, r28
 6d0:	73 d0       	rcall	.+230    	; 0x7b8 <__divmodhi4>
 6d2:	68 2f       	mov	r22, r24
 6d4:	83 e0       	ldi	r24, 0x03	; 3
 6d6:	ba df       	rcall	.-140    	; 0x64c <spi_writeWord>
 6d8:	c8 01       	movw	r24, r16
 6da:	be 01       	movw	r22, r28
 6dc:	6d d0       	rcall	.+218    	; 0x7b8 <__divmodhi4>
 6de:	18 2f       	mov	r17, r24
 6e0:	cb 01       	movw	r24, r22
 6e2:	be 01       	movw	r22, r28
 6e4:	69 d0       	rcall	.+210    	; 0x7b8 <__divmodhi4>
 6e6:	68 2f       	mov	r22, r24
 6e8:	82 e0       	ldi	r24, 0x02	; 2
 6ea:	b0 df       	rcall	.-160    	; 0x64c <spi_writeWord>
 6ec:	61 2f       	mov	r22, r17
 6ee:	81 e0       	ldi	r24, 0x01	; 1
 6f0:	ad df       	rcall	.-166    	; 0x64c <spi_writeWord>
 6f2:	23 c0       	rjmp	.+70     	; 0x73a <writeLedDisplay+0xbc>
 6f4:	ce 01       	movw	r24, r28
 6f6:	68 ee       	ldi	r22, 0xE8	; 232
 6f8:	73 e0       	ldi	r23, 0x03	; 3
 6fa:	5e d0       	rcall	.+188    	; 0x7b8 <__divmodhi4>
 6fc:	cb 01       	movw	r24, r22
 6fe:	0a e0       	ldi	r16, 0x0A	; 10
 700:	10 e0       	ldi	r17, 0x00	; 0
 702:	b8 01       	movw	r22, r16
 704:	59 d0       	rcall	.+178    	; 0x7b8 <__divmodhi4>
 706:	68 2f       	mov	r22, r24
 708:	84 e0       	ldi	r24, 0x04	; 4
 70a:	a0 df       	rcall	.-192    	; 0x64c <spi_writeWord>
 70c:	ce 01       	movw	r24, r28
 70e:	64 e6       	ldi	r22, 0x64	; 100
 710:	70 e0       	ldi	r23, 0x00	; 0
 712:	52 d0       	rcall	.+164    	; 0x7b8 <__divmodhi4>
 714:	cb 01       	movw	r24, r22
 716:	b8 01       	movw	r22, r16
 718:	4f d0       	rcall	.+158    	; 0x7b8 <__divmodhi4>
 71a:	68 2f       	mov	r22, r24
 71c:	83 e0       	ldi	r24, 0x03	; 3
 71e:	96 df       	rcall	.-212    	; 0x64c <spi_writeWord>
 720:	ce 01       	movw	r24, r28
 722:	b8 01       	movw	r22, r16
 724:	49 d0       	rcall	.+146    	; 0x7b8 <__divmodhi4>
 726:	c8 2f       	mov	r28, r24
 728:	cb 01       	movw	r24, r22
 72a:	b8 01       	movw	r22, r16
 72c:	45 d0       	rcall	.+138    	; 0x7b8 <__divmodhi4>
 72e:	68 2f       	mov	r22, r24
 730:	82 e0       	ldi	r24, 0x02	; 2
 732:	8c df       	rcall	.-232    	; 0x64c <spi_writeWord>
 734:	6c 2f       	mov	r22, r28
 736:	81 e0       	ldi	r24, 0x01	; 1
 738:	89 df       	rcall	.-238    	; 0x64c <spi_writeWord>
 73a:	df 91       	pop	r29
 73c:	cf 91       	pop	r28
 73e:	1f 91       	pop	r17
 740:	0f 91       	pop	r16
 742:	08 95       	ret

00000744 <calculateNewScoreMovement>:
}

void calculateNewScoreMovement()
{
	score += 2;
 744:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <score>
 748:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <score+0x1>
 74c:	02 96       	adiw	r24, 0x02	; 2
 74e:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <score+0x1>
 752:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <score>
	writeLedDisplay(score);
 756:	93 cf       	rjmp	.-218    	; 0x67e <writeLedDisplay>
 758:	08 95       	ret

0000075a <main>:


int main(void)
{
	//initializatie voor het scoreBord
	DDRB=0x01;					// Set PB0 pin as output for display select
 75a:	81 e0       	ldi	r24, 0x01	; 1
 75c:	87 bb       	out	0x17, r24	; 23
	spi_masterInit();			// Initialize spi module
 75e:	33 df       	rcall	.-410    	; 0x5c6 <spi_masterInit>
	displayDriverInit();		// Initialize display chip
 760:	54 df       	rcall	.-344    	; 0x60a <displayDriverInit>
	
	displayInit();
 762:	48 dd       	rcall	.-1392   	; 0x1f4 <displayInit>
	wait(500);
 764:	84 ef       	ldi	r24, 0xF4	; 244
 766:	91 e0       	ldi	r25, 0x01	; 1
 768:	16 d0       	rcall	.+44     	; 0x796 <wait>
 76a:	8f e0       	ldi	r24, 0x0F	; 15
	DDRA = 0x0F;
 76c:	8a bb       	out	0x1a, r24	; 26
 76e:	64 e0       	ldi	r22, 0x04	; 4

	//addCandy();
	setStartLocation(4,4);
 770:	70 e0       	ldi	r23, 0x00	; 0
 772:	84 e0       	ldi	r24, 0x04	; 4
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	6d dd       	rcall	.-1318   	; 0x252 <setStartLocation>
	wait(1000);
 778:	88 ee       	ldi	r24, 0xE8	; 232
 77a:	93 e0       	ldi	r25, 0x03	; 3
	//int left=0;
	//int right=1;
	//}
	//wait(1000);
	//}
	addCandy();
 77c:	0c d0       	rcall	.+24     	; 0x796 <wait>
	increaceSize();
 77e:	b8 dd       	rcall	.-1168   	; 0x2f0 <addCandy>
 780:	ad dd       	rcall	.-1190   	; 0x2dc <increaceSize>
	increaceSize();
 782:	ac dd       	rcall	.-1192   	; 0x2dc <increaceSize>
	increaceSize();
 784:	ab dd       	rcall	.-1194   	; 0x2dc <increaceSize>
 786:	aa dd       	rcall	.-1196   	; 0x2dc <increaceSize>
	increaceSize();
 788:	a9 dd       	rcall	.-1198   	; 0x2dc <increaceSize>
 78a:	a8 dd       	rcall	.-1200   	; 0x2dc <increaceSize>
	increaceSize();
 78c:	0d df       	rcall	.-486    	; 0x5a8 <moveDown>
 78e:	88 ee       	ldi	r24, 0xE8	; 232
	increaceSize();
 790:	93 e0       	ldi	r25, 0x03	; 3
 792:	01 d0       	rcall	.+2      	; 0x796 <wait>
	while(1){
		moveDown();
 794:	fb cf       	rjmp	.-10     	; 0x78c <main+0x32>

00000796 <wait>:
#include <avr/io.h>
#include <util/delay.h>

void wait( int ms )
{
	for (int i=0; i<ms; i++)
 796:	18 16       	cp	r1, r24
 798:	19 06       	cpc	r1, r25
 79a:	6c f4       	brge	.+26     	; 0x7b6 <wait+0x20>
 79c:	20 e0       	ldi	r18, 0x00	; 0
 79e:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 7a0:	ef ec       	ldi	r30, 0xCF	; 207
 7a2:	f7 e0       	ldi	r31, 0x07	; 7
 7a4:	31 97       	sbiw	r30, 0x01	; 1
 7a6:	f1 f7       	brne	.-4      	; 0x7a4 <wait+0xe>
 7a8:	00 c0       	rjmp	.+0      	; 0x7aa <wait+0x14>
 7aa:	00 00       	nop
 7ac:	2f 5f       	subi	r18, 0xFF	; 255
 7ae:	3f 4f       	sbci	r19, 0xFF	; 255
 7b0:	82 17       	cp	r24, r18
 7b2:	93 07       	cpc	r25, r19
 7b4:	a9 f7       	brne	.-22     	; 0x7a0 <wait+0xa>
 7b6:	08 95       	ret

000007b8 <__divmodhi4>:
 7b8:	97 fb       	bst	r25, 7
 7ba:	07 2e       	mov	r0, r23
 7bc:	16 f4       	brtc	.+4      	; 0x7c2 <__divmodhi4+0xa>
 7be:	00 94       	com	r0
 7c0:	06 d0       	rcall	.+12     	; 0x7ce <__divmodhi4_neg1>
 7c2:	77 fd       	sbrc	r23, 7
 7c4:	08 d0       	rcall	.+16     	; 0x7d6 <__divmodhi4_neg2>
 7c6:	0b d0       	rcall	.+22     	; 0x7de <__udivmodhi4>
 7c8:	07 fc       	sbrc	r0, 7
 7ca:	05 d0       	rcall	.+10     	; 0x7d6 <__divmodhi4_neg2>
 7cc:	3e f4       	brtc	.+14     	; 0x7dc <__divmodhi4_exit>

000007ce <__divmodhi4_neg1>:
 7ce:	90 95       	com	r25
 7d0:	81 95       	neg	r24
 7d2:	9f 4f       	sbci	r25, 0xFF	; 255
 7d4:	08 95       	ret

000007d6 <__divmodhi4_neg2>:
 7d6:	70 95       	com	r23
 7d8:	61 95       	neg	r22
 7da:	7f 4f       	sbci	r23, 0xFF	; 255

000007dc <__divmodhi4_exit>:
 7dc:	08 95       	ret

000007de <__udivmodhi4>:
 7de:	aa 1b       	sub	r26, r26
 7e0:	bb 1b       	sub	r27, r27
 7e2:	51 e1       	ldi	r21, 0x11	; 17
 7e4:	07 c0       	rjmp	.+14     	; 0x7f4 <__udivmodhi4_ep>

000007e6 <__udivmodhi4_loop>:
 7e6:	aa 1f       	adc	r26, r26
 7e8:	bb 1f       	adc	r27, r27
 7ea:	a6 17       	cp	r26, r22
 7ec:	b7 07       	cpc	r27, r23
 7ee:	10 f0       	brcs	.+4      	; 0x7f4 <__udivmodhi4_ep>
 7f0:	a6 1b       	sub	r26, r22
 7f2:	b7 0b       	sbc	r27, r23

000007f4 <__udivmodhi4_ep>:
 7f4:	88 1f       	adc	r24, r24
 7f6:	99 1f       	adc	r25, r25
 7f8:	5a 95       	dec	r21
 7fa:	a9 f7       	brne	.-22     	; 0x7e6 <__udivmodhi4_loop>
 7fc:	80 95       	com	r24
 7fe:	90 95       	com	r25
 800:	bc 01       	movw	r22, r24
 802:	cd 01       	movw	r24, r26
 804:	08 95       	ret

00000806 <malloc>:
 806:	0f 93       	push	r16
 808:	1f 93       	push	r17
 80a:	cf 93       	push	r28
 80c:	df 93       	push	r29
 80e:	82 30       	cpi	r24, 0x02	; 2
 810:	91 05       	cpc	r25, r1
 812:	10 f4       	brcc	.+4      	; 0x818 <malloc+0x12>
 814:	82 e0       	ldi	r24, 0x02	; 2
 816:	90 e0       	ldi	r25, 0x00	; 0
 818:	e0 91 28 01 	lds	r30, 0x0128	; 0x800128 <__flp>
 81c:	f0 91 29 01 	lds	r31, 0x0129	; 0x800129 <__flp+0x1>
 820:	20 e0       	ldi	r18, 0x00	; 0
 822:	30 e0       	ldi	r19, 0x00	; 0
 824:	a0 e0       	ldi	r26, 0x00	; 0
 826:	b0 e0       	ldi	r27, 0x00	; 0
 828:	30 97       	sbiw	r30, 0x00	; 0
 82a:	19 f1       	breq	.+70     	; 0x872 <malloc+0x6c>
 82c:	40 81       	ld	r20, Z
 82e:	51 81       	ldd	r21, Z+1	; 0x01
 830:	02 81       	ldd	r16, Z+2	; 0x02
 832:	13 81       	ldd	r17, Z+3	; 0x03
 834:	48 17       	cp	r20, r24
 836:	59 07       	cpc	r21, r25
 838:	c8 f0       	brcs	.+50     	; 0x86c <malloc+0x66>
 83a:	84 17       	cp	r24, r20
 83c:	95 07       	cpc	r25, r21
 83e:	69 f4       	brne	.+26     	; 0x85a <malloc+0x54>
 840:	10 97       	sbiw	r26, 0x00	; 0
 842:	31 f0       	breq	.+12     	; 0x850 <malloc+0x4a>
 844:	12 96       	adiw	r26, 0x02	; 2
 846:	0c 93       	st	X, r16
 848:	12 97       	sbiw	r26, 0x02	; 2
 84a:	13 96       	adiw	r26, 0x03	; 3
 84c:	1c 93       	st	X, r17
 84e:	27 c0       	rjmp	.+78     	; 0x89e <malloc+0x98>
 850:	00 93 28 01 	sts	0x0128, r16	; 0x800128 <__flp>
 854:	10 93 29 01 	sts	0x0129, r17	; 0x800129 <__flp+0x1>
 858:	22 c0       	rjmp	.+68     	; 0x89e <malloc+0x98>
 85a:	21 15       	cp	r18, r1
 85c:	31 05       	cpc	r19, r1
 85e:	19 f0       	breq	.+6      	; 0x866 <malloc+0x60>
 860:	42 17       	cp	r20, r18
 862:	53 07       	cpc	r21, r19
 864:	18 f4       	brcc	.+6      	; 0x86c <malloc+0x66>
 866:	9a 01       	movw	r18, r20
 868:	bd 01       	movw	r22, r26
 86a:	ef 01       	movw	r28, r30
 86c:	df 01       	movw	r26, r30
 86e:	f8 01       	movw	r30, r16
 870:	db cf       	rjmp	.-74     	; 0x828 <malloc+0x22>
 872:	21 15       	cp	r18, r1
 874:	31 05       	cpc	r19, r1
 876:	f9 f0       	breq	.+62     	; 0x8b6 <malloc+0xb0>
 878:	28 1b       	sub	r18, r24
 87a:	39 0b       	sbc	r19, r25
 87c:	24 30       	cpi	r18, 0x04	; 4
 87e:	31 05       	cpc	r19, r1
 880:	80 f4       	brcc	.+32     	; 0x8a2 <malloc+0x9c>
 882:	8a 81       	ldd	r24, Y+2	; 0x02
 884:	9b 81       	ldd	r25, Y+3	; 0x03
 886:	61 15       	cp	r22, r1
 888:	71 05       	cpc	r23, r1
 88a:	21 f0       	breq	.+8      	; 0x894 <malloc+0x8e>
 88c:	fb 01       	movw	r30, r22
 88e:	93 83       	std	Z+3, r25	; 0x03
 890:	82 83       	std	Z+2, r24	; 0x02
 892:	04 c0       	rjmp	.+8      	; 0x89c <malloc+0x96>
 894:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__flp+0x1>
 898:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__flp>
 89c:	fe 01       	movw	r30, r28
 89e:	32 96       	adiw	r30, 0x02	; 2
 8a0:	44 c0       	rjmp	.+136    	; 0x92a <malloc+0x124>
 8a2:	fe 01       	movw	r30, r28
 8a4:	e2 0f       	add	r30, r18
 8a6:	f3 1f       	adc	r31, r19
 8a8:	81 93       	st	Z+, r24
 8aa:	91 93       	st	Z+, r25
 8ac:	22 50       	subi	r18, 0x02	; 2
 8ae:	31 09       	sbc	r19, r1
 8b0:	39 83       	std	Y+1, r19	; 0x01
 8b2:	28 83       	st	Y, r18
 8b4:	3a c0       	rjmp	.+116    	; 0x92a <malloc+0x124>
 8b6:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <__brkval>
 8ba:	30 91 27 01 	lds	r19, 0x0127	; 0x800127 <__brkval+0x1>
 8be:	23 2b       	or	r18, r19
 8c0:	41 f4       	brne	.+16     	; 0x8d2 <malloc+0xcc>
 8c2:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 8c6:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 8ca:	30 93 27 01 	sts	0x0127, r19	; 0x800127 <__brkval+0x1>
 8ce:	20 93 26 01 	sts	0x0126, r18	; 0x800126 <__brkval>
 8d2:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 8d6:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 8da:	21 15       	cp	r18, r1
 8dc:	31 05       	cpc	r19, r1
 8de:	41 f4       	brne	.+16     	; 0x8f0 <malloc+0xea>
 8e0:	2d b7       	in	r18, 0x3d	; 61
 8e2:	3e b7       	in	r19, 0x3e	; 62
 8e4:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 8e8:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 8ec:	24 1b       	sub	r18, r20
 8ee:	35 0b       	sbc	r19, r21
 8f0:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <__brkval>
 8f4:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <__brkval+0x1>
 8f8:	e2 17       	cp	r30, r18
 8fa:	f3 07       	cpc	r31, r19
 8fc:	a0 f4       	brcc	.+40     	; 0x926 <malloc+0x120>
 8fe:	2e 1b       	sub	r18, r30
 900:	3f 0b       	sbc	r19, r31
 902:	28 17       	cp	r18, r24
 904:	39 07       	cpc	r19, r25
 906:	78 f0       	brcs	.+30     	; 0x926 <malloc+0x120>
 908:	ac 01       	movw	r20, r24
 90a:	4e 5f       	subi	r20, 0xFE	; 254
 90c:	5f 4f       	sbci	r21, 0xFF	; 255
 90e:	24 17       	cp	r18, r20
 910:	35 07       	cpc	r19, r21
 912:	48 f0       	brcs	.+18     	; 0x926 <malloc+0x120>
 914:	4e 0f       	add	r20, r30
 916:	5f 1f       	adc	r21, r31
 918:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <__brkval+0x1>
 91c:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <__brkval>
 920:	81 93       	st	Z+, r24
 922:	91 93       	st	Z+, r25
 924:	02 c0       	rjmp	.+4      	; 0x92a <malloc+0x124>
 926:	e0 e0       	ldi	r30, 0x00	; 0
 928:	f0 e0       	ldi	r31, 0x00	; 0
 92a:	cf 01       	movw	r24, r30
 92c:	df 91       	pop	r29
 92e:	cf 91       	pop	r28
 930:	1f 91       	pop	r17
 932:	0f 91       	pop	r16
 934:	08 95       	ret

00000936 <free>:
 936:	cf 93       	push	r28
 938:	df 93       	push	r29
 93a:	00 97       	sbiw	r24, 0x00	; 0
 93c:	09 f4       	brne	.+2      	; 0x940 <free+0xa>
 93e:	81 c0       	rjmp	.+258    	; 0xa42 <free+0x10c>
 940:	fc 01       	movw	r30, r24
 942:	32 97       	sbiw	r30, 0x02	; 2
 944:	13 82       	std	Z+3, r1	; 0x03
 946:	12 82       	std	Z+2, r1	; 0x02
 948:	a0 91 28 01 	lds	r26, 0x0128	; 0x800128 <__flp>
 94c:	b0 91 29 01 	lds	r27, 0x0129	; 0x800129 <__flp+0x1>
 950:	10 97       	sbiw	r26, 0x00	; 0
 952:	81 f4       	brne	.+32     	; 0x974 <free+0x3e>
 954:	20 81       	ld	r18, Z
 956:	31 81       	ldd	r19, Z+1	; 0x01
 958:	82 0f       	add	r24, r18
 95a:	93 1f       	adc	r25, r19
 95c:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <__brkval>
 960:	30 91 27 01 	lds	r19, 0x0127	; 0x800127 <__brkval+0x1>
 964:	28 17       	cp	r18, r24
 966:	39 07       	cpc	r19, r25
 968:	51 f5       	brne	.+84     	; 0x9be <free+0x88>
 96a:	f0 93 27 01 	sts	0x0127, r31	; 0x800127 <__brkval+0x1>
 96e:	e0 93 26 01 	sts	0x0126, r30	; 0x800126 <__brkval>
 972:	67 c0       	rjmp	.+206    	; 0xa42 <free+0x10c>
 974:	ed 01       	movw	r28, r26
 976:	20 e0       	ldi	r18, 0x00	; 0
 978:	30 e0       	ldi	r19, 0x00	; 0
 97a:	ce 17       	cp	r28, r30
 97c:	df 07       	cpc	r29, r31
 97e:	40 f4       	brcc	.+16     	; 0x990 <free+0x5a>
 980:	4a 81       	ldd	r20, Y+2	; 0x02
 982:	5b 81       	ldd	r21, Y+3	; 0x03
 984:	9e 01       	movw	r18, r28
 986:	41 15       	cp	r20, r1
 988:	51 05       	cpc	r21, r1
 98a:	f1 f0       	breq	.+60     	; 0x9c8 <free+0x92>
 98c:	ea 01       	movw	r28, r20
 98e:	f5 cf       	rjmp	.-22     	; 0x97a <free+0x44>
 990:	d3 83       	std	Z+3, r29	; 0x03
 992:	c2 83       	std	Z+2, r28	; 0x02
 994:	40 81       	ld	r20, Z
 996:	51 81       	ldd	r21, Z+1	; 0x01
 998:	84 0f       	add	r24, r20
 99a:	95 1f       	adc	r25, r21
 99c:	c8 17       	cp	r28, r24
 99e:	d9 07       	cpc	r29, r25
 9a0:	59 f4       	brne	.+22     	; 0x9b8 <free+0x82>
 9a2:	88 81       	ld	r24, Y
 9a4:	99 81       	ldd	r25, Y+1	; 0x01
 9a6:	84 0f       	add	r24, r20
 9a8:	95 1f       	adc	r25, r21
 9aa:	02 96       	adiw	r24, 0x02	; 2
 9ac:	91 83       	std	Z+1, r25	; 0x01
 9ae:	80 83       	st	Z, r24
 9b0:	8a 81       	ldd	r24, Y+2	; 0x02
 9b2:	9b 81       	ldd	r25, Y+3	; 0x03
 9b4:	93 83       	std	Z+3, r25	; 0x03
 9b6:	82 83       	std	Z+2, r24	; 0x02
 9b8:	21 15       	cp	r18, r1
 9ba:	31 05       	cpc	r19, r1
 9bc:	29 f4       	brne	.+10     	; 0x9c8 <free+0x92>
 9be:	f0 93 29 01 	sts	0x0129, r31	; 0x800129 <__flp+0x1>
 9c2:	e0 93 28 01 	sts	0x0128, r30	; 0x800128 <__flp>
 9c6:	3d c0       	rjmp	.+122    	; 0xa42 <free+0x10c>
 9c8:	e9 01       	movw	r28, r18
 9ca:	fb 83       	std	Y+3, r31	; 0x03
 9cc:	ea 83       	std	Y+2, r30	; 0x02
 9ce:	49 91       	ld	r20, Y+
 9d0:	59 91       	ld	r21, Y+
 9d2:	c4 0f       	add	r28, r20
 9d4:	d5 1f       	adc	r29, r21
 9d6:	ec 17       	cp	r30, r28
 9d8:	fd 07       	cpc	r31, r29
 9da:	61 f4       	brne	.+24     	; 0x9f4 <free+0xbe>
 9dc:	80 81       	ld	r24, Z
 9de:	91 81       	ldd	r25, Z+1	; 0x01
 9e0:	84 0f       	add	r24, r20
 9e2:	95 1f       	adc	r25, r21
 9e4:	02 96       	adiw	r24, 0x02	; 2
 9e6:	e9 01       	movw	r28, r18
 9e8:	99 83       	std	Y+1, r25	; 0x01
 9ea:	88 83       	st	Y, r24
 9ec:	82 81       	ldd	r24, Z+2	; 0x02
 9ee:	93 81       	ldd	r25, Z+3	; 0x03
 9f0:	9b 83       	std	Y+3, r25	; 0x03
 9f2:	8a 83       	std	Y+2, r24	; 0x02
 9f4:	e0 e0       	ldi	r30, 0x00	; 0
 9f6:	f0 e0       	ldi	r31, 0x00	; 0
 9f8:	12 96       	adiw	r26, 0x02	; 2
 9fa:	8d 91       	ld	r24, X+
 9fc:	9c 91       	ld	r25, X
 9fe:	13 97       	sbiw	r26, 0x03	; 3
 a00:	00 97       	sbiw	r24, 0x00	; 0
 a02:	19 f0       	breq	.+6      	; 0xa0a <free+0xd4>
 a04:	fd 01       	movw	r30, r26
 a06:	dc 01       	movw	r26, r24
 a08:	f7 cf       	rjmp	.-18     	; 0x9f8 <free+0xc2>
 a0a:	8d 91       	ld	r24, X+
 a0c:	9c 91       	ld	r25, X
 a0e:	11 97       	sbiw	r26, 0x01	; 1
 a10:	9d 01       	movw	r18, r26
 a12:	2e 5f       	subi	r18, 0xFE	; 254
 a14:	3f 4f       	sbci	r19, 0xFF	; 255
 a16:	82 0f       	add	r24, r18
 a18:	93 1f       	adc	r25, r19
 a1a:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <__brkval>
 a1e:	30 91 27 01 	lds	r19, 0x0127	; 0x800127 <__brkval+0x1>
 a22:	28 17       	cp	r18, r24
 a24:	39 07       	cpc	r19, r25
 a26:	69 f4       	brne	.+26     	; 0xa42 <free+0x10c>
 a28:	30 97       	sbiw	r30, 0x00	; 0
 a2a:	29 f4       	brne	.+10     	; 0xa36 <free+0x100>
 a2c:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <__flp+0x1>
 a30:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <__flp>
 a34:	02 c0       	rjmp	.+4      	; 0xa3a <free+0x104>
 a36:	13 82       	std	Z+3, r1	; 0x03
 a38:	12 82       	std	Z+2, r1	; 0x02
 a3a:	b0 93 27 01 	sts	0x0127, r27	; 0x800127 <__brkval+0x1>
 a3e:	a0 93 26 01 	sts	0x0126, r26	; 0x800126 <__brkval>
 a42:	df 91       	pop	r29
 a44:	cf 91       	pop	r28
 a46:	08 95       	ret

00000a48 <do_rand>:
 a48:	8f 92       	push	r8
 a4a:	9f 92       	push	r9
 a4c:	af 92       	push	r10
 a4e:	bf 92       	push	r11
 a50:	cf 92       	push	r12
 a52:	df 92       	push	r13
 a54:	ef 92       	push	r14
 a56:	ff 92       	push	r15
 a58:	cf 93       	push	r28
 a5a:	df 93       	push	r29
 a5c:	ec 01       	movw	r28, r24
 a5e:	68 81       	ld	r22, Y
 a60:	79 81       	ldd	r23, Y+1	; 0x01
 a62:	8a 81       	ldd	r24, Y+2	; 0x02
 a64:	9b 81       	ldd	r25, Y+3	; 0x03
 a66:	61 15       	cp	r22, r1
 a68:	71 05       	cpc	r23, r1
 a6a:	81 05       	cpc	r24, r1
 a6c:	91 05       	cpc	r25, r1
 a6e:	21 f4       	brne	.+8      	; 0xa78 <do_rand+0x30>
 a70:	64 e2       	ldi	r22, 0x24	; 36
 a72:	79 ed       	ldi	r23, 0xD9	; 217
 a74:	8b e5       	ldi	r24, 0x5B	; 91
 a76:	97 e0       	ldi	r25, 0x07	; 7
 a78:	2d e1       	ldi	r18, 0x1D	; 29
 a7a:	33 ef       	ldi	r19, 0xF3	; 243
 a7c:	41 e0       	ldi	r20, 0x01	; 1
 a7e:	50 e0       	ldi	r21, 0x00	; 0
 a80:	38 d0       	rcall	.+112    	; 0xaf2 <__divmodsi4>
 a82:	49 01       	movw	r8, r18
 a84:	5a 01       	movw	r10, r20
 a86:	9b 01       	movw	r18, r22
 a88:	ac 01       	movw	r20, r24
 a8a:	a7 ea       	ldi	r26, 0xA7	; 167
 a8c:	b1 e4       	ldi	r27, 0x41	; 65
 a8e:	4d d0       	rcall	.+154    	; 0xb2a <__muluhisi3>
 a90:	6b 01       	movw	r12, r22
 a92:	7c 01       	movw	r14, r24
 a94:	ac ee       	ldi	r26, 0xEC	; 236
 a96:	b4 ef       	ldi	r27, 0xF4	; 244
 a98:	a5 01       	movw	r20, r10
 a9a:	94 01       	movw	r18, r8
 a9c:	52 d0       	rcall	.+164    	; 0xb42 <__mulohisi3>
 a9e:	dc 01       	movw	r26, r24
 aa0:	cb 01       	movw	r24, r22
 aa2:	8c 0d       	add	r24, r12
 aa4:	9d 1d       	adc	r25, r13
 aa6:	ae 1d       	adc	r26, r14
 aa8:	bf 1d       	adc	r27, r15
 aaa:	b7 ff       	sbrs	r27, 7
 aac:	03 c0       	rjmp	.+6      	; 0xab4 <do_rand+0x6c>
 aae:	01 97       	sbiw	r24, 0x01	; 1
 ab0:	a1 09       	sbc	r26, r1
 ab2:	b0 48       	sbci	r27, 0x80	; 128
 ab4:	88 83       	st	Y, r24
 ab6:	99 83       	std	Y+1, r25	; 0x01
 ab8:	aa 83       	std	Y+2, r26	; 0x02
 aba:	bb 83       	std	Y+3, r27	; 0x03
 abc:	9f 77       	andi	r25, 0x7F	; 127
 abe:	df 91       	pop	r29
 ac0:	cf 91       	pop	r28
 ac2:	ff 90       	pop	r15
 ac4:	ef 90       	pop	r14
 ac6:	df 90       	pop	r13
 ac8:	cf 90       	pop	r12
 aca:	bf 90       	pop	r11
 acc:	af 90       	pop	r10
 ace:	9f 90       	pop	r9
 ad0:	8f 90       	pop	r8
 ad2:	08 95       	ret

00000ad4 <rand_r>:
 ad4:	b9 cf       	rjmp	.-142    	; 0xa48 <do_rand>

00000ad6 <rand>:
 ad6:	86 e0       	ldi	r24, 0x06	; 6
 ad8:	91 e0       	ldi	r25, 0x01	; 1
 ada:	b6 cf       	rjmp	.-148    	; 0xa48 <do_rand>

00000adc <srand>:
 adc:	a0 e0       	ldi	r26, 0x00	; 0
 ade:	b0 e0       	ldi	r27, 0x00	; 0
 ae0:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <next>
 ae4:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <next+0x1>
 ae8:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <next+0x2>
 aec:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <next+0x3>
 af0:	08 95       	ret

00000af2 <__divmodsi4>:
 af2:	05 2e       	mov	r0, r21
 af4:	97 fb       	bst	r25, 7
 af6:	16 f4       	brtc	.+4      	; 0xafc <__divmodsi4+0xa>
 af8:	00 94       	com	r0
 afa:	0f d0       	rcall	.+30     	; 0xb1a <__negsi2>
 afc:	57 fd       	sbrc	r21, 7
 afe:	05 d0       	rcall	.+10     	; 0xb0a <__divmodsi4_neg2>
 b00:	24 d0       	rcall	.+72     	; 0xb4a <__udivmodsi4>
 b02:	07 fc       	sbrc	r0, 7
 b04:	02 d0       	rcall	.+4      	; 0xb0a <__divmodsi4_neg2>
 b06:	46 f4       	brtc	.+16     	; 0xb18 <__divmodsi4_exit>
 b08:	08 c0       	rjmp	.+16     	; 0xb1a <__negsi2>

00000b0a <__divmodsi4_neg2>:
 b0a:	50 95       	com	r21
 b0c:	40 95       	com	r20
 b0e:	30 95       	com	r19
 b10:	21 95       	neg	r18
 b12:	3f 4f       	sbci	r19, 0xFF	; 255
 b14:	4f 4f       	sbci	r20, 0xFF	; 255
 b16:	5f 4f       	sbci	r21, 0xFF	; 255

00000b18 <__divmodsi4_exit>:
 b18:	08 95       	ret

00000b1a <__negsi2>:
 b1a:	90 95       	com	r25
 b1c:	80 95       	com	r24
 b1e:	70 95       	com	r23
 b20:	61 95       	neg	r22
 b22:	7f 4f       	sbci	r23, 0xFF	; 255
 b24:	8f 4f       	sbci	r24, 0xFF	; 255
 b26:	9f 4f       	sbci	r25, 0xFF	; 255
 b28:	08 95       	ret

00000b2a <__muluhisi3>:
 b2a:	31 d0       	rcall	.+98     	; 0xb8e <__umulhisi3>
 b2c:	a5 9f       	mul	r26, r21
 b2e:	90 0d       	add	r25, r0
 b30:	b4 9f       	mul	r27, r20
 b32:	90 0d       	add	r25, r0
 b34:	a4 9f       	mul	r26, r20
 b36:	80 0d       	add	r24, r0
 b38:	91 1d       	adc	r25, r1
 b3a:	11 24       	eor	r1, r1
 b3c:	08 95       	ret

00000b3e <__mulshisi3>:
 b3e:	b7 ff       	sbrs	r27, 7
 b40:	f4 cf       	rjmp	.-24     	; 0xb2a <__muluhisi3>

00000b42 <__mulohisi3>:
 b42:	f3 df       	rcall	.-26     	; 0xb2a <__muluhisi3>
 b44:	82 1b       	sub	r24, r18
 b46:	93 0b       	sbc	r25, r19
 b48:	08 95       	ret

00000b4a <__udivmodsi4>:
 b4a:	a1 e2       	ldi	r26, 0x21	; 33
 b4c:	1a 2e       	mov	r1, r26
 b4e:	aa 1b       	sub	r26, r26
 b50:	bb 1b       	sub	r27, r27
 b52:	fd 01       	movw	r30, r26
 b54:	0d c0       	rjmp	.+26     	; 0xb70 <__udivmodsi4_ep>

00000b56 <__udivmodsi4_loop>:
 b56:	aa 1f       	adc	r26, r26
 b58:	bb 1f       	adc	r27, r27
 b5a:	ee 1f       	adc	r30, r30
 b5c:	ff 1f       	adc	r31, r31
 b5e:	a2 17       	cp	r26, r18
 b60:	b3 07       	cpc	r27, r19
 b62:	e4 07       	cpc	r30, r20
 b64:	f5 07       	cpc	r31, r21
 b66:	20 f0       	brcs	.+8      	; 0xb70 <__udivmodsi4_ep>
 b68:	a2 1b       	sub	r26, r18
 b6a:	b3 0b       	sbc	r27, r19
 b6c:	e4 0b       	sbc	r30, r20
 b6e:	f5 0b       	sbc	r31, r21

00000b70 <__udivmodsi4_ep>:
 b70:	66 1f       	adc	r22, r22
 b72:	77 1f       	adc	r23, r23
 b74:	88 1f       	adc	r24, r24
 b76:	99 1f       	adc	r25, r25
 b78:	1a 94       	dec	r1
 b7a:	69 f7       	brne	.-38     	; 0xb56 <__udivmodsi4_loop>
 b7c:	60 95       	com	r22
 b7e:	70 95       	com	r23
 b80:	80 95       	com	r24
 b82:	90 95       	com	r25
 b84:	9b 01       	movw	r18, r22
 b86:	ac 01       	movw	r20, r24
 b88:	bd 01       	movw	r22, r26
 b8a:	cf 01       	movw	r24, r30
 b8c:	08 95       	ret

00000b8e <__umulhisi3>:
 b8e:	a2 9f       	mul	r26, r18
 b90:	b0 01       	movw	r22, r0
 b92:	b3 9f       	mul	r27, r19
 b94:	c0 01       	movw	r24, r0
 b96:	a3 9f       	mul	r26, r19
 b98:	70 0d       	add	r23, r0
 b9a:	81 1d       	adc	r24, r1
 b9c:	11 24       	eor	r1, r1
 b9e:	91 1d       	adc	r25, r1
 ba0:	b2 9f       	mul	r27, r18
 ba2:	70 0d       	add	r23, r0
 ba4:	81 1d       	adc	r24, r1
 ba6:	11 24       	eor	r1, r1
 ba8:	91 1d       	adc	r25, r1
 baa:	08 95       	ret

00000bac <_exit>:
 bac:	f8 94       	cli

00000bae <__stop_program>:
 bae:	ff cf       	rjmp	.-2      	; 0xbae <__stop_program>
